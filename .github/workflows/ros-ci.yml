name: ROS 2 CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    container:
      image: ros:rolling
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup ROS 2
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: rolling
      
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y python3-colcon-common-extensions python3-colcon-package-information
      
      - name: Build
        run: |
          # Create workspace
          mkdir -p /tmp/ros_ws/src/hello_world_robot
          
          # Copy necessary files excluding .git and other unnecessary files
          cp -r .devcontainer /tmp/ros_ws/src/hello_world_robot/
          cp -r include /tmp/ros_ws/src/hello_world_robot/ || true
          cp -r src /tmp/ros_ws/src/hello_world_robot/
          cp -r test /tmp/ros_ws/src/hello_world_robot/ || true
          cp CMakeLists.txt package.xml /tmp/ros_ws/src/hello_world_robot/ || true
          
          # Build package
          cd /tmp/ros_ws
          . /opt/ros/rolling/setup.sh
          colcon build --packages-select hello_world_robot
      
      - name: Test
        run: |
          cd /tmp/ros_ws
          . /opt/ros/rolling/setup.sh
          . install/setup.sh
          colcon test --packages-select hello_world_robot --event-handlers console_direct+
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: /tmp/ros_ws/build/hello_world_robot/test_results

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 404883402772.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: ros_test
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          # Also tag as latest
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest